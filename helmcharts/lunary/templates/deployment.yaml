{{- if and (eq .Release.Name "lunary-frontend") (.Values.frontend.enabled) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lunary.fullname" . }}
  labels:
    app: lunary-frontend
    {{- include "lunary.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: lunary-frontend
      {{- include "lunary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: lunary-frontend
        {{- include "lunary.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: 
            - |
              cd /app && \
              npm run start:frontend || \
              (echo "Failed to start frontend" && exit 1)
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment }}
          envFrom:
            - configMapRef:
                name: lunary
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
{{- end }}

{{- if and (eq .Release.Name "lunary-backend") (.Values.backend.enabled) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lunary.fullname" . }}
  labels:
    app: lunary-backend
    {{- include "lunary.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: lunary-backend
      {{- include "lunary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: lunary-backend
        {{- include "lunary.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: 
            - |
              cd /app && \
              npm run start:backend || \
              (echo "Failed to start backend" && exit 1)
          ports:
            - name: http
              containerPort: 4000
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment }}
            # - name: DATABASE_URL
            #   valueFrom:
            #     secretKeyRef:
            #       name: database-credentials
            #       key: DATABASE_URL
            #       value: {{ .Values.backend.databaseUrl }}
          envFrom:
            - configMapRef:
                name: lunary
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
{{- end }}

{{- if not .Values.frontend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lunary.fullname" . }}
  labels:
    {{- include "lunary.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lunary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lunary.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lunary.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: lunary
            {{- if .Values.secretProvider.enabled }}
            - secretRef:
                name: {{ .Values.secretProvider.secretName }}
            {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
