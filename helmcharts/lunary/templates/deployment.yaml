{{- if and (eq .Release.Name "lunary-frontend") (.Values.frontend.enabled) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lunary.fullname" . }}
  labels:
    app: lunary-frontend
    {{- include "lunary.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: lunary-frontend
      {{- include "lunary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: lunary-frontend
        {{- include "lunary.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: 
            - |
              cd /app && \
              npm run start:frontend || \
              (echo "Failed to start frontend" && exit 1)
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment }}
          envFrom:
            - configMapRef:
                name: lunary
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
{{- end }}

{{- if and (eq .Release.Name "lunary-backend") (.Values.backend.enabled) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lunary.fullname" . }}
  labels:
    app: lunary-backend
    {{- include "lunary.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: lunary-backend
      {{- include "lunary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: lunary-backend
        {{- include "lunary.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: 
            - |
              cd /app && \
              npm run start:backend || \
              (echo "Failed to start backend" && exit 1)
          ports:
            - name: http
              containerPort: 4000
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment }}
            # - name: DATABASE_URL
            #   valueFrom:
            #     secretKeyRef:
            #       name: database-credentials
            #       key: DATABASE_URL
            #       value: {{ .Values.backend.databaseUrl }}
          envFrom:
            - configMapRef:
                name: lunary
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
{{- end }}

